---
- name: Run uninstall procedure
  when: komodo_action == "uninstall"
  block:
    - name: Stop periphery service (user)
      become: true
      become_user: "{{ komodo_user }}"
      environment:
        XDG_RUNTIME_DIR: "/run/user/{{ getent_passwd[komodo_user].1 }}"
      ansible.builtin.systemd:
        name: periphery
        state: stopped
        scope: user
      failed_when: false
      when:
        - komodo_user_exists
        - not komodo_systemwide_service

    - name: Stop periphery service (system)
      become: true
      ansible.builtin.systemd:
        name: periphery
        state: stopped
      failed_when: false
      when:
        - komodo_user_exists
        - komodo_systemwide_service

    - name: Disable periphery (user)
      become: true
      become_user: "{{ komodo_user }}"
      ansible.builtin.systemd:
        name: periphery
        enabled: false
        scope: user
      environment:
        XDG_RUNTIME_DIR: "/run/user/{{ getent_passwd[komodo_user].1 }}"
      failed_when: false
      changed_when: false
      when:
        - komodo_user_exists
        - not komodo_systemwide_service

    - name: Disable periphery (system)
      become: true
      ansible.builtin.systemd:
        name: periphery
        enabled: false
      failed_when: false
      changed_when: false
      when:
        - komodo_user_exists
        - komodo_systemwide_service

    - name: Remove periphery unit file
      become: true
      ansible.builtin.file:
        path: "{{ komodo_service_path }}"
        state: absent

    - name: Reload systemd daemon (user)
      become: true
      become_user: "{{ komodo_user }}"
      ansible.builtin.systemd:
        daemon_reload: true
        scope: user
      environment:
        XDG_RUNTIME_DIR: "/run/user/{{ getent_passwd[komodo_user].1 }}"
      when:
        - komodo_user_exists
        - not komodo_systemwide_service

    - name: Reload systemd daemon (system)
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
      when:
        - komodo_user_exists
        - komodo_systemwide_service

    - name: Disable lingering for komodo user
      ansible.builtin.command: loginctl disable-linger {{ komodo_user }}
      changed_when: false
      become: true

    - name: Remove komodo directories
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ komodo_bin_dir }}"
        - "{{ komodo_config_dir }}"
        - "{{ komodo_service_dir }}"
        - "/etc/komodo/ssl"

    - name: Remove komodo user
      ansible.builtin.user:
        name: "{{ komodo_user }}"
        state: absent
        remove: true
        force: true
      become: true
      when: komodo_delete_user | default(false)

    - name: Debug message after uninstall
      ansible.builtin.debug:
        msg: "Uninstallation of {{ komodo_user }} completed successfully! (User removed: {{ komodo_delete_user | default(false) }})"
