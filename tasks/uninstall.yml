---
- name: Run uninstall procedure
  when: komodo_action == "uninstall"
  block:
    - name: Stop periphery service
      become: true
      become_user: "{{ systemd_ctx[komodo_service_scope].become_user }}"
      environment: "{{ systemd_ctx[komodo_service_scope].environment | default({}) }}"
      ansible.builtin.systemd:
        name: periphery
        state: stopped
        scope: "{{ systemd_ctx[komodo_service_scope].scope }}"
      failed_when: false
      when: komodo_user_exists

    - name: Disable periphery
      become: true
      become_user: "{{ systemd_ctx[komodo_service_scope].become_user }}"
      environment: "{{ systemd_ctx[komodo_service_scope].environment | default({}) }}"
      ansible.builtin.systemd:
        name: periphery
        enabled: false
        scope: "{{ systemd_ctx[komodo_service_scope].scope }}"
      failed_when: false
      changed_when: false
      when: komodo_user_exists

    - name: Remove periphery unit file
      become: true
      ansible.builtin.file:
        path: "{{ komodo_service_dir }}/periphery.service"
        state: absent

    - name: Reload systemd daemon
      become: true
      become_user: "{{ systemd_ctx[komodo_service_scope].become_user }}"
      environment: "{{ systemd_ctx[komodo_service_scope].environment | default({}) }}"
      ansible.builtin.systemd:
        daemon_reload: true
        scope: "{{ systemd_ctx[komodo_service_scope].scope }}"
      when: komodo_user_exists

    - name: Disable lingering for komodo user
      ansible.builtin.command: loginctl disable-linger {{ komodo_user }}
      changed_when: false
      become: true
      when:
        - komodo_service_scope == "user"
        - komodo_user_exists
        - allow_modify_komodo_user | bool

    - name: Remove komodo directories
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ komodo_bin_dir }}"
        - "{{ komodo_config_dir }}"
        - "/etc/komodo/ssl"

    - name: Remove komodo user
      ansible.builtin.user:
        name: "{{ komodo_user }}"
        state: absent
        remove: true
        force: true
      become: true
      when: allow_delete_komodo_user | default(false)

    - name: Debug message after uninstall
      ansible.builtin.debug:
        msg: "Uninstallation of {{ komodo_user }} completed successfully! (User removed: {{ allow_delete_komodo_user | default(false) }})"
